// RUN: strip-comments.sh %s | filecheck %s

assign x
// CHECK: assign [[VAR:[a-z]+]]
print x
// CHECK: print [[VAR]]

// check re-assignment
assign y
// CHECK: assign [[VAR:[a-z]+]]
print y
// CHECK: print [[VAR]]

// check that we can use a varibale immediately
same x x
// CHECK: same [[VAR:[a-z]+]] [[VAR]]

// check that capturing group madness works
assign z
// CHECK: {{(assign|alloc)(\(abc\))?}} [[VAR2:[a-z]+]]
print z
// CHECK-NOT: print [[VAR]]
// CHECK: print [[VAR2]]

// check for posix style regex
same FF77 FF77
// CHECK: [[VAR:[[:xdigit:]]+]] [[VAR]]

// numeric captures:
print 0xFF00FF00
// CHECK: [[#%.8X,]]
print 100
// CHECK: [[#%.3,]]
print -100 -100
// CHECK: [[#%.3d,ARG:]] [[ARG]]

mov r0, r1
// CHECK: mov r0, r[[#]]

// capturing two variables in the same line
commutativity states that (x * y) = (y * x)
// CHECK: ([[a:(\w+)(x?)]] * [[b:(\w+)(x?)]]) = ([[b]] * [[a]])
again: (x * y) = (y * x)
// CHECK: ([[a]] * [[b]]) = ([[b]] * [[a]])


// check that we parse ambigous syntax correctly:
test %arg1
// CHECK:       test [[ARG:%[[:alnum:]]+]]
test [%arg1][0]
// CHECK-NEXT:  test [[[ARG]]][0]


// we have to replicate FileChecks behaviour here, and allow empty varaible captures:
test 123
// CHECK: test [[VAL:]]
// CHECK-SAME: [[VAL]]
